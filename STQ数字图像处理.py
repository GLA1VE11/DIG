# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'STQ数字图像处理.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_mainWindow(object):
    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(557, 478)
        mainWindow.setStyleSheet("QLabel { \n"
"    color: blue ;\n"
"    font-size:15px;\n"
"    border:1px solid #1d649c;\n"
"    font-family:微软雅黑;\n"
"    background-color: #e7d8d8\n"
"}\n"
"\n"
"QGroupBox {\n"
"    font-family:华文彩云;\n"
"    font-size:15px;\n"
"}\n"
"\n"
"QPushButton {\n"
"    border: 1px solid rgb(124, 124, 124);\n"
"    background-color: qconicalgradient(cx:0.5, cy:0.5, angle:180, stop:0.49999 rgba(214, 214, 214, 255), stop:0.50001 rgba(236, 236, 236, 255));    \n"
"    border-radius:30px;\n"
"    font-family:华文彩云;\n"
"    font-size:25px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border: 1px solid #3C80B1;\n"
"    background-color: qconicalgradient(cx:0.5, cy:0.5, angle:180, stop:0.49999 rgba(181, 225, 250, 255), stop:0.50001 rgba(222, 242, 251, 255));\n"
"    border-radius:5px;\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    border: 1px solid #5F92B2;\n"
"    background-color: qconicalgradient(cx:0.5, cy:0.5, angle:180, stop:0.49999 rgba(134, 198, 233, 255), stop:0.50001 rgba(206, 234, 248, 255));\n"
"    border-radius:5px;\n"
"}")
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(-1, -1, -1, 10)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.original_group = QtWidgets.QGroupBox(self.centralwidget)
        self.original_group.setObjectName("original_group")
        self.ori_pic = QtWidgets.QLabel(self.original_group)
        self.ori_pic.setGeometry(QtCore.QRect(1, 30, 261, 251))
        self.ori_pic.setText("")
        self.ori_pic.setObjectName("ori_pic")
        self.horizontalLayout.addWidget(self.original_group)
        self.fixed_group = QtWidgets.QGroupBox(self.centralwidget)
        self.fixed_group.setObjectName("fixed_group")
        self.fixed_pic = QtWidgets.QLabel(self.fixed_group)
        self.fixed_pic.setGeometry(QtCore.QRect(0, 30, 261, 251))
        self.fixed_pic.setText("")
        self.fixed_pic.setObjectName("fixed_pic")
        self.horizontalLayout.addWidget(self.fixed_group)
        self.horizontalLayout.setStretch(0, 1)
        self.horizontalLayout.setStretch(1, 1)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setContentsMargins(-1, -1, -1, 10)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.origin_label = QtWidgets.QLabel(self.centralwidget)
        self.origin_label.setAlignment(QtCore.Qt.AlignCenter)
        self.origin_label.setObjectName("origin_label")
        self.horizontalLayout_2.addWidget(self.origin_label)
        self.origin_pic_path = QtWidgets.QLabel(self.centralwidget)
        self.origin_pic_path.setAlignment(QtCore.Qt.AlignCenter)
        self.origin_pic_path.setObjectName("origin_pic_path")
        self.horizontalLayout_2.addWidget(self.origin_pic_path)
        self.horizontalLayout_2.setStretch(0, 1)
        self.horizontalLayout_2.setStretch(1, 3)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(-1, -1, -1, 10)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.save_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.save_label.sizePolicy().hasHeightForWidth())
        self.save_label.setSizePolicy(sizePolicy)
        self.save_label.setAlignment(QtCore.Qt.AlignCenter)
        self.save_label.setObjectName("save_label")
        self.horizontalLayout_3.addWidget(self.save_label)
        self.save_pic_path = QtWidgets.QLabel(self.centralwidget)
        self.save_pic_path.setAlignment(QtCore.Qt.AlignCenter)
        self.save_pic_path.setObjectName("save_pic_path")
        self.horizontalLayout_3.addWidget(self.save_pic_path)
        self.horizontalLayout_3.setStretch(1, 3)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.Open_btn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Open_btn.sizePolicy().hasHeightForWidth())
        self.Open_btn.setSizePolicy(sizePolicy)
        self.Open_btn.setObjectName("Open_btn")
        self.horizontalLayout_4.addWidget(self.Open_btn)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.verticalLayout.setStretch(0, 10)
        self.verticalLayout.setStretch(1, 1)
        self.verticalLayout.setStretch(3, 1)
        mainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(mainWindow)
        self.menubar.setEnabled(True)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 557, 26))
        self.menubar.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.menubar.setObjectName("menubar")
        self.file_menu = QtWidgets.QMenu(self.menubar)
        self.file_menu.setEnabled(True)
        self.file_menu.setObjectName("file_menu")
        self.geo_menu = QtWidgets.QMenu(self.menubar)
        self.geo_menu.setEnabled(True)
        self.geo_menu.setObjectName("geo_menu")
        self.move = QtWidgets.QMenu(self.geo_menu)
        self.move.setEnabled(True)
        self.move.setObjectName("move")
        self.shrink = QtWidgets.QMenu(self.geo_menu)
        self.shrink.setObjectName("shrink")
        self.shear = QtWidgets.QMenu(self.geo_menu)
        self.shear.setObjectName("shear")
        self.Magnification = QtWidgets.QMenu(self.geo_menu)
        self.Magnification.setObjectName("Magnification")
        self.rotate = QtWidgets.QMenu(self.geo_menu)
        self.rotate.setObjectName("rotate")
        self.denoising_menu = QtWidgets.QMenu(self.menubar)
        self.denoising_menu.setEnabled(True)
        self.denoising_menu.setObjectName("denoising_menu")
        self.Histogram_Equalization = QtWidgets.QMenu(self.denoising_menu)
        self.Histogram_Equalization.setObjectName("Histogram_Equalization")
        self.Noise_menu = QtWidgets.QMenu(self.denoising_menu)
        self.Noise_menu.setObjectName("Noise_menu")
        self.Filter_menu = QtWidgets.QMenu(self.denoising_menu)
        self.Filter_menu.setObjectName("Filter_menu")
        self.sharp_menu = QtWidgets.QMenu(self.menubar)
        self.sharp_menu.setEnabled(True)
        self.sharp_menu.setObjectName("sharp_menu")
        self.one_sharpen_menu = QtWidgets.QMenu(self.sharp_menu)
        self.one_sharpen_menu.setObjectName("one_sharpen_menu")
        self.menuLaplacian = QtWidgets.QMenu(self.sharp_menu)
        self.menuLaplacian.setObjectName("menuLaplacian")
        self.cut_menu = QtWidgets.QMenu(self.menubar)
        self.cut_menu.setEnabled(True)
        self.cut_menu.setObjectName("cut_menu")
        mainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setObjectName("statusbar")
        mainWindow.setStatusBar(self.statusbar)
        self.show_info = QtWidgets.QAction(mainWindow)
        self.show_info.setEnabled(True)
        self.show_info.setObjectName("show_info")
        self.move_menu = QtWidgets.QAction(mainWindow)
        self.move_menu.setObjectName("move_menu")
        self.move_change_menu = QtWidgets.QAction(mainWindow)
        self.move_change_menu.setObjectName("move_change_menu")
        self.Mirror_H_menu = QtWidgets.QAction(mainWindow)
        self.Mirror_H_menu.setObjectName("Mirror_H_menu")
        self.Mirror_V_menu = QtWidgets.QAction(mainWindow)
        self.Mirror_V_menu.setObjectName("Mirror_V_menu")
        self.Central_symmetry_menu = QtWidgets.QAction(mainWindow)
        self.Central_symmetry_menu.setObjectName("Central_symmetry_menu")
        self.shrink_menu = QtWidgets.QAction(mainWindow)
        self.shrink_menu.setObjectName("shrink_menu")
        self.shrink_same_menu = QtWidgets.QAction(mainWindow)
        self.shrink_same_menu.setObjectName("shrink_same_menu")
        self.shearx_menu = QtWidgets.QAction(mainWindow)
        self.shearx_menu.setObjectName("shearx_menu")
        self.sheary_menu = QtWidgets.QAction(mainWindow)
        self.sheary_menu.setObjectName("sheary_menu")
        self.Magnification_N_menu = QtWidgets.QAction(mainWindow)
        self.Magnification_N_menu.setObjectName("Magnification_N_menu")
        self.Magnification_B_menu = QtWidgets.QAction(mainWindow)
        self.Magnification_B_menu.setObjectName("Magnification_B_menu")
        self.ShowHistmenu = QtWidgets.QAction(mainWindow)
        self.ShowHistmenu.setObjectName("ShowHistmenu")
        self.Histogram_Equalization2_menu = QtWidgets.QAction(mainWindow)
        self.Histogram_Equalization2_menu.setObjectName("Histogram_Equalization2_menu")
        self.Histogram_Equalization_menu = QtWidgets.QAction(mainWindow)
        self.Histogram_Equalization_menu.setObjectName("Histogram_Equalization_menu")
        self.Binarization_menu = QtWidgets.QAction(mainWindow)
        self.Binarization_menu.setObjectName("Binarization_menu")
        self.Grey_Cutter_menu = QtWidgets.QAction(mainWindow)
        self.Grey_Cutter_menu.setObjectName("Grey_Cutter_menu")
        self.Salt_And_Pepper_Noise_menu = QtWidgets.QAction(mainWindow)
        self.Salt_And_Pepper_Noise_menu.setObjectName("Salt_And_Pepper_Noise_menu")
        self.Gauss_Noise_menu = QtWidgets.QAction(mainWindow)
        self.Gauss_Noise_menu.setObjectName("Gauss_Noise_menu")
        self.Random_Noise_menu = QtWidgets.QAction(mainWindow)
        self.Random_Noise_menu.setObjectName("Random_Noise_menu")
        self.Black_And_White_Dot_Noise_Filtering_menu = QtWidgets.QAction(mainWindow)
        self.Black_And_White_Dot_Noise_Filtering_menu.setObjectName("Black_And_White_Dot_Noise_Filtering_menu")
        self.Gaussian_Blur_menu = QtWidgets.QAction(mainWindow)
        self.Gaussian_Blur_menu.setObjectName("Gaussian_Blur_menu")
        self.Average_Filtering_menu = QtWidgets.QAction(mainWindow)
        self.Average_Filtering_menu.setObjectName("Average_Filtering_menu")
        self.Median_Filtering_menu = QtWidgets.QAction(mainWindow)
        self.Median_Filtering_menu.setObjectName("Median_Filtering_menu")
        self.SNN_menu = QtWidgets.QAction(mainWindow)
        self.SNN_menu.setObjectName("SNN_menu")
        self.KNN_menu = QtWidgets.QAction(mainWindow)
        self.KNN_menu.setObjectName("KNN_menu")
        self.Horizontal_Sharpen_menu = QtWidgets.QAction(mainWindow)
        self.Horizontal_Sharpen_menu.setObjectName("Horizontal_Sharpen_menu")
        self.Vertical_Sharpen_menu = QtWidgets.QAction(mainWindow)
        self.Vertical_Sharpen_menu.setObjectName("Vertical_Sharpen_menu")
        self.Gradient_menu = QtWidgets.QAction(mainWindow)
        self.Gradient_menu.setObjectName("Gradient_menu")
        self.Robert_menu = QtWidgets.QAction(mainWindow)
        self.Robert_menu.setObjectName("Robert_menu")
        self.Sobel_menu = QtWidgets.QAction(mainWindow)
        self.Sobel_menu.setObjectName("Sobel_menu")
        self.Prewitt_menu = QtWidgets.QAction(mainWindow)
        self.Prewitt_menu.setObjectName("Prewitt_menu")
        self.Laplacian_menu = QtWidgets.QAction(mainWindow)
        self.Laplacian_menu.setObjectName("Laplacian_menu")
        self.Laplacian2_menu = QtWidgets.QAction(mainWindow)
        self.Laplacian2_menu.setObjectName("Laplacian2_menu")
        self.Wallis_menu = QtWidgets.QAction(mainWindow)
        self.Wallis_menu.setObjectName("Wallis_menu")
        self.Rotate_Counterclockwise_menu = QtWidgets.QAction(mainWindow)
        self.Rotate_Counterclockwise_menu.setObjectName("Rotate_Counterclockwise_menu")
        self.Rotate_Clockwise_menu = QtWidgets.QAction(mainWindow)
        self.Rotate_Clockwise_menu.setObjectName("Rotate_Clockwise_menu")
        self.grey_info = QtWidgets.QAction(mainWindow)
        self.grey_info.setObjectName("grey_info")
        self.Gray_Histogram_Segmentation_menu = QtWidgets.QAction(mainWindow)
        self.Gray_Histogram_Segmentation_menu.setObjectName("Gray_Histogram_Segmentation_menu")
        self.Minimum_Variance_menu = QtWidgets.QAction(mainWindow)
        self.Minimum_Variance_menu.setObjectName("Minimum_Variance_menu")
        self.P_Parameter_menu = QtWidgets.QAction(mainWindow)
        self.P_Parameter_menu.setObjectName("P_Parameter_menu")
        self.Erosion_menu = QtWidgets.QAction(mainWindow)
        self.Erosion_menu.setObjectName("Erosion_menu")
        self.Inflation_menu = QtWidgets.QAction(mainWindow)
        self.Inflation_menu.setObjectName("Inflation_menu")
        self.Close_Operation_menu = QtWidgets.QAction(mainWindow)
        self.Close_Operation_menu.setObjectName("Close_Operation_menu")
        self.Open_Operation_menu = QtWidgets.QAction(mainWindow)
        self.Open_Operation_menu.setObjectName("Open_Operation_menu")
        self.file_menu.addAction(self.show_info)
        self.file_menu.addAction(self.grey_info)
        self.move.addSeparator()
        self.move.addAction(self.move_menu)
        self.move.addAction(self.move_change_menu)
        self.shrink.addAction(self.shrink_menu)
        self.shrink.addAction(self.shrink_same_menu)
        self.shear.addAction(self.shearx_menu)
        self.shear.addAction(self.sheary_menu)
        self.Magnification.addAction(self.Magnification_N_menu)
        self.Magnification.addAction(self.Magnification_B_menu)
        self.rotate.addSeparator()
        self.rotate.addAction(self.Rotate_Counterclockwise_menu)
        self.rotate.addAction(self.Rotate_Clockwise_menu)
        self.geo_menu.addAction(self.move.menuAction())
        self.geo_menu.addAction(self.Mirror_H_menu)
        self.geo_menu.addAction(self.Mirror_V_menu)
        self.geo_menu.addAction(self.Central_symmetry_menu)
        self.geo_menu.addAction(self.rotate.menuAction())
        self.geo_menu.addAction(self.shrink.menuAction())
        self.geo_menu.addAction(self.shear.menuAction())
        self.geo_menu.addAction(self.Magnification.menuAction())
        self.Histogram_Equalization.addAction(self.Histogram_Equalization2_menu)
        self.Histogram_Equalization.addAction(self.Histogram_Equalization_menu)
        self.Noise_menu.addAction(self.Salt_And_Pepper_Noise_menu)
        self.Noise_menu.addAction(self.Gauss_Noise_menu)
        self.Noise_menu.addAction(self.Random_Noise_menu)
        self.Filter_menu.addAction(self.Black_And_White_Dot_Noise_Filtering_menu)
        self.Filter_menu.addAction(self.Gaussian_Blur_menu)
        self.Filter_menu.addAction(self.Average_Filtering_menu)
        self.Filter_menu.addAction(self.Median_Filtering_menu)
        self.Filter_menu.addAction(self.SNN_menu)
        self.Filter_menu.addAction(self.KNN_menu)
        self.denoising_menu.addAction(self.ShowHistmenu)
        self.denoising_menu.addAction(self.Histogram_Equalization.menuAction())
        self.denoising_menu.addAction(self.Binarization_menu)
        self.denoising_menu.addAction(self.Grey_Cutter_menu)
        self.denoising_menu.addAction(self.Noise_menu.menuAction())
        self.denoising_menu.addAction(self.Filter_menu.menuAction())
        self.one_sharpen_menu.addAction(self.Horizontal_Sharpen_menu)
        self.one_sharpen_menu.addAction(self.Vertical_Sharpen_menu)
        self.menuLaplacian.addAction(self.Laplacian_menu)
        self.menuLaplacian.addAction(self.Laplacian2_menu)
        self.sharp_menu.addAction(self.one_sharpen_menu.menuAction())
        self.sharp_menu.addAction(self.Gradient_menu)
        self.sharp_menu.addAction(self.Robert_menu)
        self.sharp_menu.addAction(self.Sobel_menu)
        self.sharp_menu.addAction(self.Prewitt_menu)
        self.sharp_menu.addAction(self.menuLaplacian.menuAction())
        self.sharp_menu.addAction(self.Wallis_menu)
        self.cut_menu.addAction(self.Gray_Histogram_Segmentation_menu)
        self.cut_menu.addAction(self.Minimum_Variance_menu)
        self.cut_menu.addAction(self.P_Parameter_menu)
        self.cut_menu.addAction(self.Erosion_menu)
        self.cut_menu.addAction(self.Inflation_menu)
        self.cut_menu.addAction(self.Close_Operation_menu)
        self.cut_menu.addAction(self.Open_Operation_menu)
        self.menubar.addAction(self.file_menu.menuAction())
        self.menubar.addAction(self.geo_menu.menuAction())
        self.menubar.addAction(self.denoising_menu.menuAction())
        self.menubar.addAction(self.sharp_menu.menuAction())
        self.menubar.addAction(self.cut_menu.menuAction())

        self.retranslateUi(mainWindow)
        self.Open_btn.clicked.connect(mainWindow.OpenImg) # type: ignore
        self.show_info.triggered.connect(mainWindow.Show_Pic_Info) # type: ignore
        self.Horizontal_Sharpen_menu.triggered.connect(mainWindow.Horizontal_Sharpen_slot) # type: ignore
        self.Vertical_Sharpen_menu.triggered.connect(mainWindow.Vertical_Sharpen_slot) # type: ignore
        self.Gradient_menu.triggered.connect(mainWindow.Gradient_Sharpen_slot) # type: ignore
        self.Robert_menu.triggered.connect(mainWindow.Robert_Sharpen_slot) # type: ignore
        self.Sobel_menu.triggered.connect(mainWindow.Sobel_Sharpen_slot) # type: ignore
        self.Prewitt_menu.triggered.connect(mainWindow.Prewitt_Sharpen_slot) # type: ignore
        self.Wallis_menu.triggered.connect(mainWindow.Wallis_Sharpen_slot) # type: ignore
        self.Laplacian_menu.triggered.connect(mainWindow.Laplacian_Sharpen_slot) # type: ignore
        self.Laplacian2_menu.triggered.connect(mainWindow.Laplacian2_Sharpen_slot) # type: ignore
        self.ShowHistmenu.triggered.connect(mainWindow.ShowHist_slot) # type: ignore
        self.Histogram_Equalization2_menu.triggered.connect(mainWindow.Histogram_Equalization2_slot) # type: ignore
        self.Histogram_Equalization_menu.triggered.connect(mainWindow.Histogram_Equalization_slot) # type: ignore
        self.Binarization_menu.triggered.connect(mainWindow.Binarization_slot) # type: ignore
        self.Grey_Cutter_menu.triggered.connect(mainWindow.Grey_Cutter_slot) # type: ignore
        self.Salt_And_Pepper_Noise_menu.triggered.connect(mainWindow.Generate_Salt_And_Pepper_Noise_slot) # type: ignore
        self.Gauss_Noise_menu.triggered.connect(mainWindow.Generate_Gauss_Noise_slot) # type: ignore
        self.Random_Noise_menu.triggered.connect(mainWindow.Generate_Random_Noise_slot) # type: ignore
        self.Black_And_White_Dot_Noise_Filtering_menu.triggered.connect(mainWindow.Black_And_White_Dot_Noise_Filtering_slot) # type: ignore
        self.Gaussian_Blur_menu.triggered.connect(mainWindow.Gaussian_Blur_slot) # type: ignore
        self.Average_Filtering_menu.triggered.connect(mainWindow.Average_Filtering_slot) # type: ignore
        self.Median_Filtering_menu.triggered.connect(mainWindow.Median_Filtering_slot) # type: ignore
        self.SNN_menu.triggered.connect(mainWindow.SNN_Filtering_slot) # type: ignore
        self.KNN_menu.triggered.connect(mainWindow.KNN_Filtering_slot) # type: ignore
        self.show_info.triggered.connect(mainWindow.Show_Info_slot) # type: ignore
        self.move_menu.triggered.connect(mainWindow.Move_slot) # type: ignore
        self.move_change_menu.triggered.connect(mainWindow.Move_Without_Changing_Size_slot) # type: ignore
        self.Mirror_H_menu.triggered.connect(mainWindow.Mirror_Horizontally_slot) # type: ignore
        self.Mirror_V_menu.triggered.connect(mainWindow.Mirror_Vertically_slot) # type: ignore
        self.Central_symmetry_menu.triggered.connect(mainWindow.Central_symmetry_slot) # type: ignore
        self.Rotate_Counterclockwise_menu.triggered.connect(mainWindow.Rotate_Counterclockwise_slot) # type: ignore
        self.Rotate_Clockwise_menu.triggered.connect(mainWindow.Rotate_Clockwise_slot) # type: ignore
        self.shrink_menu.triggered.connect(mainWindow.Shrink_slot) # type: ignore
        self.shrink_same_menu.triggered.connect(mainWindow.Shrink_Same_slot) # type: ignore
        self.shearx_menu.triggered.connect(mainWindow.Shear_Mapping_X_slot) # type: ignore
        self.sheary_menu.triggered.connect(mainWindow.Shear_Mapping_Y_slot) # type: ignore
        self.Magnification_B_menu.triggered.connect(mainWindow.Bilinear_Interpolation_Magnification_slot) # type: ignore
        self.Magnification_N_menu.triggered.connect(mainWindow.Nearest_Interpolation_Magnification_slot) # type: ignore
        self.grey_info.triggered.connect(mainWindow.Grey_Pic_slot) # type: ignore
        self.Gray_Histogram_Segmentation_menu.triggered.connect(mainWindow.Gray_Histogram_Segmentation_slot) # type: ignore
        self.Minimum_Variance_menu.triggered.connect(mainWindow.Minimum_Variance_slot) # type: ignore
        self.P_Parameter_menu.triggered.connect(mainWindow.P_Parameter_slot) # type: ignore
        self.Erosion_menu.triggered.connect(mainWindow.Erosion_slot) # type: ignore
        self.Inflation_menu.triggered.connect(mainWindow.Inflation_slot) # type: ignore
        self.Close_Operation_menu.triggered.connect(mainWindow.Close_Operation_slot) # type: ignore
        self.Open_Operation_menu.triggered.connect(mainWindow.Open_Operation_slot) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "STQ数字图像处理"))
        self.original_group.setTitle(_translate("mainWindow", "原始图片"))
        self.fixed_group.setTitle(_translate("mainWindow", "处理后图片"))
        self.origin_label.setText(_translate("mainWindow", "原始图片路径:"))
        self.origin_pic_path.setText(_translate("mainWindow", "尚未选中图片yoo"))
        self.save_label.setText(_translate("mainWindow", "     图片保存路径:    "))
        self.save_pic_path.setText(_translate("mainWindow", "默认保存路径在img文件夹下"))
        self.Open_btn.setText(_translate("mainWindow", "打开图片"))
        self.file_menu.setTitle(_translate("mainWindow", "文件"))
        self.geo_menu.setTitle(_translate("mainWindow", "几何变换"))
        self.move.setTitle(_translate("mainWindow", "平移图片"))
        self.shrink.setTitle(_translate("mainWindow", "图像缩小"))
        self.shear.setTitle(_translate("mainWindow", "错切"))
        self.Magnification.setTitle(_translate("mainWindow", "图像放大"))
        self.rotate.setTitle(_translate("mainWindow", "反变换图像旋转"))
        self.denoising_menu.setTitle(_translate("mainWindow", "图像去噪相关"))
        self.Histogram_Equalization.setTitle(_translate("mainWindow", "直方图均衡化"))
        self.Noise_menu.setTitle(_translate("mainWindow", "随机给图片添加噪声"))
        self.Filter_menu.setTitle(_translate("mainWindow", "图像滤波"))
        self.sharp_menu.setTitle(_translate("mainWindow", "图像锐化"))
        self.one_sharpen_menu.setTitle(_translate("mainWindow", "一阶锐化"))
        self.menuLaplacian.setTitle(_translate("mainWindow", "Laplacian算子"))
        self.cut_menu.setTitle(_translate("mainWindow", "图像分割"))
        self.show_info.setText(_translate("mainWindow", "显示位图信息"))
        self.move_menu.setText(_translate("mainWindow", "不改变图片大小"))
        self.move_change_menu.setText(_translate("mainWindow", "改变图片大小"))
        self.Mirror_H_menu.setText(_translate("mainWindow", "水平镜像"))
        self.Mirror_V_menu.setText(_translate("mainWindow", "垂直镜像"))
        self.Central_symmetry_menu.setText(_translate("mainWindow", "中心对称"))
        self.shrink_menu.setText(_translate("mainWindow", "任意比例缩小"))
        self.shrink_same_menu.setText(_translate("mainWindow", "按相同比例缩小"))
        self.shearx_menu.setText(_translate("mainWindow", "x_axis"))
        self.sheary_menu.setText(_translate("mainWindow", "y_axis"))
        self.Magnification_N_menu.setText(_translate("mainWindow", "双线性插值放大"))
        self.Magnification_B_menu.setText(_translate("mainWindow", "最近邻插值放大"))
        self.ShowHistmenu.setText(_translate("mainWindow", "显示灰度直方图"))
        self.Histogram_Equalization2_menu.setText(_translate("mainWindow", "三个通道分别均衡化"))
        self.Histogram_Equalization_menu.setText(_translate("mainWindow", "三个通道一起均衡化（不推荐）"))
        self.Binarization_menu.setText(_translate("mainWindow", "二值化"))
        self.Grey_Cutter_menu.setText(_translate("mainWindow", "灰度级切片"))
        self.Salt_And_Pepper_Noise_menu.setText(_translate("mainWindow", "椒盐噪声"))
        self.Gauss_Noise_menu.setText(_translate("mainWindow", "高斯噪声"))
        self.Random_Noise_menu.setText(_translate("mainWindow", "随机噪声"))
        self.Black_And_White_Dot_Noise_Filtering_menu.setText(_translate("mainWindow", "黑白噪声点滤波"))
        self.Gaussian_Blur_menu.setText(_translate("mainWindow", "Gauss滤波"))
        self.Average_Filtering_menu.setText(_translate("mainWindow", "均值滤波"))
        self.Median_Filtering_menu.setText(_translate("mainWindow", "中值滤波"))
        self.SNN_menu.setText(_translate("mainWindow", "SNN滤波"))
        self.KNN_menu.setText(_translate("mainWindow", "KNN滤波"))
        self.Horizontal_Sharpen_menu.setText(_translate("mainWindow", "水平方向的一阶锐化"))
        self.Vertical_Sharpen_menu.setText(_translate("mainWindow", "垂直方向的一阶锐化"))
        self.Gradient_menu.setText(_translate("mainWindow", "基于门限值的梯度锐化"))
        self.Robert_menu.setText(_translate("mainWindow", "Robert算子"))
        self.Sobel_menu.setText(_translate("mainWindow", "Sobel算子"))
        self.Prewitt_menu.setText(_translate("mainWindow", "Prewitt算子"))
        self.Laplacian_menu.setText(_translate("mainWindow", "普通Laplacian算子"))
        self.Laplacian2_menu.setText(_translate("mainWindow", "最接近原图的Laplacian算子"))
        self.Wallis_menu.setText(_translate("mainWindow", "Wallis算子"))
        self.Rotate_Counterclockwise_menu.setText(_translate("mainWindow", "逆时针"))
        self.Rotate_Clockwise_menu.setText(_translate("mainWindow", "顺时针"))
        self.grey_info.setText(_translate("mainWindow", "图片灰度化"))
        self.Gray_Histogram_Segmentation_menu.setText(_translate("mainWindow", "灰度直方图阈值分割"))
        self.Minimum_Variance_menu.setText(_translate("mainWindow", "最小类内方差"))
        self.P_Parameter_menu.setText(_translate("mainWindow", "p 参数生长"))
        self.Erosion_menu.setText(_translate("mainWindow", "腐蚀"))
        self.Inflation_menu.setText(_translate("mainWindow", "膨胀"))
        self.Close_Operation_menu.setText(_translate("mainWindow", "闭运算"))
        self.Open_Operation_menu.setText(_translate("mainWindow", "开运算"))
